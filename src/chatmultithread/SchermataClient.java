/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chatmultithread;

import java.awt.*;
import javax.swing.*;
import java.net.*;
/**
 * Classe d'interfaccia grafica per l'utente (IN QUANTO L'INTERO PROGRAMMA 
 * VIENE UTILIZZATO PER SCOPI MAGGIORI TALE CLASSE NON RISULTERÃ  DEL TUTTO 
 * ULTIMATA)
 * @author Dany
 */
public class SchermataClient extends javax.swing.JFrame {

    Client client;  //Classe client dalla quale prelevare i metodi
    JTextArea reader;   //area di testo adoperata nel pannello a scrollo
    JScrollPane ReadPanel; //pannello ad auto scorrimento capace di far leggere piu messaggi
    /**
     * Creates new form SchermataCliente
     */
    public SchermataClient() {
        initComponents();
        MyinitComponents();
    }
    /**
     * metodo di scrittura del messaggio in arrivo all'interno del pannello 
     * a scorrimento
     * @param mex messaggio in arrivo
     */
    public void MessaggioinArrivo(String mex){
        reader.setText(reader.getText() + '\n' + mex);
    }
    /**
     * metodo di scrittura del messaggio in uscita appena scritto all'interno 
     * del riquadro inferiore e passato per parametro da Usermessage
     * @param mex messaggio senza nome utente
     */
    public void MessaggioinUscita(String mex){
        if(mex.charAt(0) != '@'){
            MessaggioinArrivo(Username.getText() + ": " + mex);
        }
        client.Scrivi(mex);
    }
    /**
     * Piccolo costruttore di componenti importante per costruire alcuni 
     * elementi non standardizzati e quindi non editabili da netbeans
     */
    private void MyinitComponents(){
        reader = new JTextArea(10,20);
        reader.setEditable(false);
        ReadPanel = new JScrollPane(reader);
        ReadPanel.setBackground(new Color(0, 0, 30));
        ReadPanel.setBorder(null);
        ReadPanel.setForeground(new Color(0, 0, 30));
        ReadPanel.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        ReadPanel.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED);
        ReadPanel.setAlignmentX(0.0F);
        ReadPanel.setAlignmentY(0.0F);
        getContentPane().add(ReadPanel);
        ReadPanel.setBounds(10, 70, 320, 350); 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UserPanel = new javax.swing.JPanel();
        Username = new javax.swing.JTextField();
        WritePanel = new javax.swing.JPanel();
        Usermessage = new javax.swing.JTextField();
        Button = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(320, 500));
        setMinimumSize(new java.awt.Dimension(320, 500));
        setPreferredSize(new java.awt.Dimension(330, 530));
        setResizable(false);
        getContentPane().setLayout(null);

        UserPanel.setBackground(new java.awt.Color(102, 102, 102));

        Username.setBackground(new java.awt.Color(102, 102, 102));
        Username.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        Username.setForeground(new java.awt.Color(240, 240, 240));
        Username.setText("Scrivi qui il tuo nome per chattare");
        Username.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UsernameMouseClicked(evt);
            }
        });
        Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UserPanelLayout = new javax.swing.GroupLayout(UserPanel);
        UserPanel.setLayout(UserPanelLayout);
        UserPanelLayout.setHorizontalGroup(
            UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(81, Short.MAX_VALUE))
        );
        UserPanelLayout.setVerticalGroup(
            UserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        getContentPane().add(UserPanel);
        UserPanel.setBounds(0, 0, 320, 70);

        WritePanel.setBackground(new java.awt.Color(0, 0, 30));

        Usermessage.setBackground(new java.awt.Color(240, 240, 240));
        Usermessage.setForeground(new java.awt.Color(0, 0, 30));
        Usermessage.setText("Scrivi un messaggio...");
        Usermessage.setEnabled(false);
        Usermessage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UsermessageMouseClicked(evt);
            }
        });
        Usermessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsermessageActionPerformed(evt);
            }
        });
        Usermessage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                UsermessageKeyPressed(evt);
            }
        });

        Button.setBackground(new java.awt.Color(0, 102, 204));
        Button.setForeground(new java.awt.Color(0, 102, 204));
        Button.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chatmultithread/media/pulsante invia.png"))); // NOI18N
        Button.setBorder(null);
        Button.setEnabled(false);
        Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout WritePanelLayout = new javax.swing.GroupLayout(WritePanel);
        WritePanel.setLayout(WritePanelLayout);
        WritePanelLayout.setHorizontalGroup(
            WritePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(WritePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Usermessage, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Button, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        WritePanelLayout.setVerticalGroup(
            WritePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, WritePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(WritePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Usermessage, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(24, 24, 24))
        );

        getContentPane().add(WritePanel);
        WritePanel.setBounds(0, 420, 320, 80);

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * autocreazione di actionperformed inrimovibile
 * @param evt evento
 */
    private void UsermessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsermessageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsermessageActionPerformed
/**
 * Checkout di nome cliente il quale determina anche alcuni controlli
 * @param evt 
 */
    private void UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameActionPerformed
        if(Username.getText().equals("@Server ") || Username.getText().equals("") || Username.getText().length() > 20){
            Username.setForeground(Color.red);
        }else{
            Username.setForeground(new Color(240, 240, 240));
            client = new Client(Username.getText(), "info");
            Usermessage.setEnabled(true);
            Button.setEnabled(true);
            Username.setEditable(false);
            
            Socket sock = client.Connetti();
            if(sock == null) MessaggioinArrivo("@Server : Host non raggiungibile");
            else {
                client.Comunica(this);
            }
        }
    }//GEN-LAST:event_UsernameActionPerformed
/**
 * Cancella la scritta al riquadro del nome non appena lo si clicca
 * @param evt click
 */
    private void UsernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UsernameMouseClicked
        Username.setText("");
    }//GEN-LAST:event_UsernameMouseClicked
  
    
/**
 * Invio del messaggio alla pressione di enter ma non utilizzato
 * @param evt enter press
 */
    private void UsermessageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UsermessageKeyPressed
        //MessaggioinUscita(Usermessage.getText());
    }//GEN-LAST:event_UsermessageKeyPressed
/**
 * Invio del messaggio al click sul bottone
 * @param evt bottone cliccato
 */
    private void ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonActionPerformed
        MessaggioinUscita(Usermessage.getText());
    }//GEN-LAST:event_ButtonActionPerformed
/**
 * Cancella la scritta al riquadro del messaggio non appena lo si clicca
 * @param evt click
 */
    private void UsermessageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UsermessageMouseClicked
        Usermessage.setText("");
    }//GEN-LAST:event_UsermessageMouseClicked
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SchermataClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SchermataClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SchermataClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SchermataClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SchermataClient().setVisible(true);
            }
        });
    }  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Button;
    private javax.swing.JPanel UserPanel;
    private javax.swing.JTextField Usermessage;
    private javax.swing.JTextField Username;
    private javax.swing.JPanel WritePanel;
    // End of variables declaration//GEN-END:variables
}
